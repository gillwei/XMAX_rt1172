$version 10.00

$rect <30,30,230,70>
$output false
class POP08_WeatherLoadingUI : Components::BaseMainBG
{
  $rect <530,60,730,100>
  inherited method Init()
  {
    DeviceInterface::WeatherDevice.SendWeatherInfoRequest();
    DeviceInterface::WeatherDevice.SendVehicleSettingRequest();
  }

  $rect <20,20,160,60>
  object Views::Text LoadingText
  {
    preset Bounds = <10,156,470,187>;
    preset String = Strings::GEN_PLEASE_WAIT;
    preset Font = Fonts::NotoSansCjkJpMedium24pt;
  }

  $rect <530,110,730,150>
  object Core::PropertyObserver WeatherLoadingObserver
  {
    preset OnEvent = OnWeatherLoadingUpdateSlot;
    preset Outlet = ^DeviceInterface::WeatherDevice.IsWeatherInfoReceived;
  }

  // This slot method is executed when the associated property observer 'PropertyObserver' \
  // is notified.
  $rect <730,110,930,150>
  slot OnWeatherLoadingUpdateSlot
  {
    if( DeviceInterface::WeatherDevice.IsWeatherInfoReceived )
    {
      ConnectionFailedTimer.Enabled = false;
      PresentDialog( new Weather::WEA01_Main, null, null, null, null, null, null, null, null, false );
    }
  }

  $rect <20,20,160,60>
  object Views::Image LoadingAnimation
  {
    preset Bounds = <193,54,287,148>;
    preset Animated = true;
    preset Bitmap = Resource::LoadingAnimation;
  }

  $rect <530,170,720,210>
  object Core::Timer ConnectionFailedTimer
  {
    preset OnTrigger = OnConnectionFailedUpdateSlot;
    preset Period = 20000;
    preset Enabled = true;
  }

  $rect <730,170,930,210>
  slot OnConnectionFailedUpdateSlot
  {
    ConnectionFailedTimer.Enabled = false;
    PresentDialog( new Pop::POP09_BleConnectionErrorUI, null, null, null, null, null, null, null, null, false );

  }

  $rect <530,260,730,300>
  object Core::SystemEventHandler MotoConConnectionEventHandler
  {
    preset OnEvent = OnMotoConConnectionUpdateEvent;
    preset Event = DeviceInterface::BluetoothDevice.MotoConSystemEvent;
  }

  // This slot method is executed when the associated system event handler 'SystemEventHandler' \
  // receives an event.
  $rect <730,260,930,300>
  slot OnMotoConConnectionUpdateEvent
  {
    var DeviceInterface::MotoConContext MotoConContext = ( DeviceInterface::MotoConContext )MotoConConnectionEventHandler.Context;
    if( Enum::MotoConRxEvent.CONNECTION_STATUS == MotoConContext.RxEvent )
    {
      if( !DeviceInterface::BluetoothDevice.IsMotoconConnected() )
      {
        signal OnConnectionFailedUpdateSlot;
      }
    }
  }
}

$rect <30,80,230,120>
$output false
class POP09_BleConnectionErrorUI : Components::BaseMainBG
{
  $rect <20,20,160,60>
  object Views::Text ConnectionFailedMessage
  {
    preset Bounds = <10,50,470,236>;
    preset String = Strings::POP09_CONNECTION_FAILED;
    preset Font = Fonts::NotoSansCjkJpMedium24pt;
  }

  $rect <570,80,760,120>
  object Core::Timer CountDownTimer
  {
    preset OnTrigger = OnLauncherScreenUpdateSlot;
    preset Period = 2000;
    preset Enabled = true;
  }

  $rect <760,80,960,120>
  slot OnLauncherScreenUpdateSlot
  {
    CountDownTimer.Enabled = false;
    var Application::Application App = (Application::Application)GetRoot();
    if( null != App )
    {
      App.ReturnToLauncher();
    }
  }
}
